name: Build and Pack Solutions

on:
  push:
    branches: [main] # build-and-test запускается автоматически при push в main
  pull_request:
    branches: [main] # build-and-test запускается автоматически при pull_request в main
  workflow_dispatch: # Позволяет запускать docker-deploy вручную

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: webfactory/ssh-agent@v0.5.0
        with:
          ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}
      - name: Add SSH key to known hosts
        run: ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            export GITHUB_PAT=${{ secrets.PAT_GITHUB }}
            TEMP_DIR=$(mktemp -d)
            echo "Temporary directory: $TEMP_DIR"
            git clone https://${GITHUB_PAT}@github.com/${{ github.repository }}.git $TEMP_DIR
            cd $TEMP_DIR
            pwd
            ls -la
            git checkout ${{ github.ref }}
            cp -R * /home/github/ci_test/project/
            rm -rf $TEMP_DIR

            cd /home/github/ci_test/project/

            # Создание директории для NuGet пакетов
            mkdir -p ./LocalNuget

            # Восстановление зависимостей для всех .csproj
            for csproj in $(find ./Abstractions -name "*.csproj"); do
              echo "Restoring dependencies for $csproj"
              dotnet restore $csproj --configfile ./nuget.config
            done

            dotnet restore ./NotificationService/NotificationService.Models/NotificationService.Models.csproj --configfile ./nuget.config
            dotnet restore ./WalletService/WalletService.Models/WalletService.Models.csproj --configfile ./nuget.config

            # Сборка всех .csproj файлов
            for csproj in $(find ./Abstractions -name "*.csproj"); do
              echo "Building $csproj"
              dotnet build $csproj --configuration Release
            done

            dotnet build ./NotificationService/NotificationService.Models/NotificationService.Models.csproj --configuration Release
            dotnet build ./WalletService/WalletService.Models/WalletService.Models.csproj --configuration Release

            # Упаковка всех проектов в NuGet пакеты
            for csproj in $(find ./Abstractions -name "*.csproj"); do
              echo "Packing NuGet package for $csproj"
              dotnet pack $csproj --configuration Release --output ~/LocalNuget
            done

            dotnet pack ./NotificationService/NotificationService.Models/NotificationService.Models.csproj --configuration Release --output ~/LocalNuget
            dotnet pack ./WalletService/WalletService.Models/WalletService.Models.csproj --configuration Release --output ~/LocalNuget

            # Восстановление и сборка решений
            for solution in ./ApiGateway/*.sln ./NotificationService/*.sln ./UserService/*.sln ./WalletService/*.sln ./BetsService/*.sln; do
              echo "Restoring and building solution $solution"
              dotnet restore $solution
              dotnet build $solution -c Release
            done
